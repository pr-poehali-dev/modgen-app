import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Badge } from '@/components/ui/badge';
import { ScrollArea } from '@/components/ui/scroll-area';
import Icon from '@/components/ui/icon';
import { toast } from 'sonner';

interface Mod {
  id: string;
  name: string;
  description: string;
  loader: string;
  version: string;
  date: string;
  status: 'ready' | 'generating';
}

const Index = () => {
  const [activeTab, setActiveTab] = useState('generator');
  const [modDescription, setModDescription] = useState('');
  const [modLoader, setModLoader] = useState('forge');
  const [mcVersion, setMcVersion] = useState('1.20.1');
  const [isGenerating, setIsGenerating] = useState(false);
  const [currentModId, setCurrentModId] = useState<string | null>(null);
  const [chatMessage, setChatMessage] = useState('');
  const [mods, setMods] = useState<Mod[]>([
    {
      id: '1',
      name: 'Enhanced Tools Mod',
      description: '–î–æ–±–∞–≤–ª—è–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–π –ø—Ä–æ—á–Ω–æ—Å—Ç—å—é',
      loader: 'Forge',
      version: '1.20.1',
      date: '2025-10-01',
      status: 'ready'
    }
  ]);

  const [chatMessages, setChatMessages] = useState<Array<{ role: 'user' | 'ai'; content: string }>>([
    { role: 'ai', content: '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –æ–±–Ω–æ–≤–∏—Ç—å —Ç–≤–æ–π –º–æ–¥. –û–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å.' }
  ]);

  const mcVersions = [
    '1.21.7', '1.21.1', '1.21', '1.20.6', '1.20.4', '1.20.1', '1.19.4', '1.19.2', 
    '1.18.2', '1.17.1', '1.16.5', '1.15.2', '1.14.4', '1.12.2', '1.10.2', '1.8.9', '1.7.10'
  ];

  const handleGenerateMod = () => {
    if (!modDescription.trim()) {
      toast.error('–û–ø–∏—à–∏, –∫–∞–∫–æ–π –º–æ–¥ —Ç—ã —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å');
      return;
    }

    setIsGenerating(true);
    toast.loading('–ì–µ–Ω–µ—Ä–∏—Ä—É—é –º–æ–¥...', { id: 'generating' });

    setTimeout(() => {
      const newMod: Mod = {
        id: Date.now().toString(),
        name: modDescription.slice(0, 30) + '...',
        description: modDescription,
        loader: modLoader === 'forge' ? 'Forge' : 'Fabric',
        version: mcVersion,
        date: new Date().toISOString().split('T')[0],
        status: 'ready'
      };

      setMods([newMod, ...mods]);
      setIsGenerating(false);
      setCurrentModId(newMod.id);
      toast.success('–ú–æ–¥ –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é!', { id: 'generating' });
      setModDescription('');
    }, 3000);
  };

  const handleDownloadMod = (modId: string) => {
    toast.success('–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–∞—á–∞–ª–æ—Å—å!');
  };

  const handleSendMessage = () => {
    if (!chatMessage.trim()) return;
    if (!currentModId) {
      toast.error('–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π –º–æ–¥');
      return;
    }

    setChatMessages([...chatMessages, { role: 'user', content: chatMessage }]);
    setChatMessage('');

    setTimeout(() => {
      setChatMessages(prev => [...prev, { 
        role: 'ai', 
        content: '–û—Ç–ª–∏—á–Ω–æ! –Ø –æ–±–Ω–æ–≤–ª—é —Ç–≤–æ–π –º–æ–¥. –ß–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.' 
      }]);
    }, 1000);
  };

  return (
    <div className="min-h-screen bg-background text-foreground p-4 md:p-8">
      <div className="max-w-6xl mx-auto">
        <header className="mb-8 text-center">
          <div className="flex items-center justify-center gap-4 mb-4">
            <div className="w-16 h-16 bg-primary pixel-border flex items-center justify-center text-4xl">
              üéÆ
            </div>
            <h1 className="text-4xl md:text-5xl font-bold tracking-tight" style={{ 
              textShadow: '4px 4px 0px rgba(0,0,0,0.3)' 
            }}>
              MINECRAFT MOD GENERATOR
            </h1>
          </div>
          <p className="text-muted-foreground text-lg">
            –°–æ–∑–¥–∞–≤–∞–π –º–æ–¥—ã –ª—é–±–æ–π —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ AI ‚Äî –æ—Ç –±–ª–æ–∫–æ–≤ –¥–æ —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
          </p>
        </header>

        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          <TabsList className="grid w-full grid-cols-3 mb-8 h-14 pixel-border bg-card">
            <TabsTrigger value="generator" className="text-base pixel-button data-[state=active]:bg-primary">
              <Icon name="Cpu" className="mr-2" size={20} />
              –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä
            </TabsTrigger>
            <TabsTrigger value="chat" className="text-base pixel-button data-[state=active]:bg-primary">
              <Icon name="MessageSquare" className="mr-2" size={20} />
              –ß–∞—Ç
            </TabsTrigger>
            <TabsTrigger value="history" className="text-base pixel-button data-[state=active]:bg-primary">
              <Icon name="History" className="mr-2" size={20} />
              –ò—Å—Ç–æ—Ä–∏—è
            </TabsTrigger>
          </TabsList>

          <TabsContent value="generator" className="space-y-6">
            <Card className="pixel-border">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Wrench" size={24} />
                  –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –º–æ–¥
                </CardTitle>
                <CardDescription>
                  –û–ø–∏—à–∏, –∫–∞–∫–æ–π –º–æ–¥ —Ç—ã —Ö–æ—á–µ—à—å ‚Äî AI —Å–æ–∑–¥–∞—Å—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div className="space-y-2">
                    <label className="text-sm font-medium flex items-center gap-2">
                      <Icon name="Box" size={16} />
                      –ó–∞–≥—Ä—É–∑—á–∏–∫ –º–æ–¥–æ–≤
                    </label>
                    <Select value={modLoader} onValueChange={setModLoader}>
                      <SelectTrigger className="pixel-border">
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent className="pixel-border">
                        <SelectItem value="forge">Forge</SelectItem>
                        <SelectItem value="fabric">Fabric</SelectItem>
                      </SelectContent>
                    </Select>
                  </div>

                  <div className="space-y-2">
                    <label className="text-sm font-medium flex items-center gap-2">
                      <Icon name="Calendar" size={16} />
                      –í–µ—Ä—Å–∏—è Minecraft
                    </label>
                    <Select value={mcVersion} onValueChange={setMcVersion}>
                      <SelectTrigger className="pixel-border">
                        <SelectValue />
                      </SelectTrigger>
                      <SelectContent className="pixel-border max-h-60">
                        {mcVersions.map(v => (
                          <SelectItem key={v} value={v}>{v}</SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </div>
                </div>

                <div className="space-y-2">
                  <label className="text-sm font-medium flex items-center gap-2">
                    <Icon name="FileText" size={16} />
                    –û–ø–∏—Å–∞–Ω–∏–µ –º–æ–¥–∞
                  </label>
                  <Textarea 
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –î–æ–±–∞–≤—å –∏–∑—É–º—Ä—É–¥–Ω—ã–π –º–µ—á —Å –ø—Ä–æ—á–Ω–æ—Å—Ç—å—é 3000 –∏ —É—Ä–æ–Ω–æ–º 12. –ú–µ—á –¥–æ–ª–∂–µ–Ω —Å–≤–µ—Ç–∏—Ç—å—Å—è –≤ —Ç–µ–º–Ω–æ—Ç–µ."
                    value={modDescription}
                    onChange={(e) => setModDescription(e.target.value)}
                    className="min-h-32 pixel-border resize-none"
                    disabled={isGenerating}
                  />
                </div>

                <Button 
                  onClick={handleGenerateMod}
                  disabled={isGenerating}
                  size="lg"
                  className="w-full pixel-button pixel-border bg-primary hover:bg-primary/90 text-lg h-14"
                >
                  {isGenerating ? (
                    <>
                      <Icon name="Loader2" className="mr-2 animate-spin" size={20} />
                      –ì–µ–Ω–µ—Ä–∏—Ä—É—é –º–æ–¥...
                    </>
                  ) : (
                    <>
                      <Icon name="Sparkles" className="mr-2" size={20} />
                      –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥
                    </>
                  )}
                </Button>
              </CardContent>
            </Card>

            <Card className="pixel-border bg-muted/50">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-lg">
                  <Icon name="Info" size={20} />
                  –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                  <div className="flex items-start gap-2">
                    <Icon name="Check" size={16} className="text-primary mt-1" />
                    <span>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–æ–≤, –±–ª–æ–∫–æ–≤, —Å—É—â–µ—Å—Ç–≤</span>
                  </div>
                  <div className="flex items-start gap-2">
                    <Icon name="Check" size={16} className="text-primary mt-1" />
                    <span>AI-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç—É—Ä</span>
                  </div>
                  <div className="flex items-start gap-2">
                    <Icon name="Check" size={16} className="text-primary mt-1" />
                    <span>–ö–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤</span>
                  </div>
                  <div className="flex items-start gap-2">
                    <Icon name="Check" size={16} className="text-primary mt-1" />
                    <span>–ì–æ—Ç–æ–≤—ã–π Gradle-–ø—Ä–æ–µ–∫—Ç</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="chat" className="space-y-4">
            <Card className="pixel-border">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="MessagesSquare" size={24} />
                  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞
                </CardTitle>
                <CardDescription>
                  {currentModId 
                    ? `–†–µ–¥–∞–∫—Ç–∏—Ä—É–µ—à—å: ${mods.find(m => m.id === currentModId)?.name}`
                    : '–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π –º–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä"'
                  }
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <ScrollArea className="h-96 pixel-border bg-muted/20 p-4 rounded">
                  <div className="space-y-4">
                    {chatMessages.map((msg, i) => (
                      <div key={i} className={`flex ${msg.role === 'user' ? 'justify-end' : 'justify-start'}`}>
                        <div className={`max-w-[80%] p-3 pixel-border ${
                          msg.role === 'user' ? 'bg-primary' : 'bg-card'
                        }`}>
                          <div className="flex items-center gap-2 mb-1">
                            <Icon name={msg.role === 'user' ? 'User' : 'Bot'} size={16} />
                            <span className="text-xs opacity-70">
                              {msg.role === 'user' ? '–¢—ã' : 'AI'}
                            </span>
                          </div>
                          <p className="text-sm">{msg.content}</p>
                        </div>
                      </div>
                    ))}
                  </div>
                </ScrollArea>

                <div className="flex gap-2">
                  <Textarea 
                    placeholder="–î–æ–±–∞–≤—å –∑–∞—á–∞—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç HP..."
                    value={chatMessage}
                    onChange={(e) => setChatMessage(e.target.value)}
                    onKeyDown={(e) => {
                      if (e.key === 'Enter' && !e.shiftKey) {
                        e.preventDefault();
                        handleSendMessage();
                      }
                    }}
                    className="pixel-border resize-none"
                    rows={3}
                    disabled={!currentModId}
                  />
                  <Button 
                    onClick={handleSendMessage}
                    disabled={!currentModId}
                    className="pixel-button pixel-border bg-primary hover:bg-primary/90"
                    size="lg"
                  >
                    <Icon name="Send" size={20} />
                  </Button>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="history" className="space-y-4">
            <Card className="pixel-border">
              <CardHeader>
                <CardTitle className="flex items-center gap-2">
                  <Icon name="Archive" size={24} />
                  –¢–≤–æ–∏ –º–æ–¥—ã
                </CardTitle>
                <CardDescription>
                  –í—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –º–æ–¥—ã –º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
                </CardDescription>
              </CardHeader>
              <CardContent>
                <ScrollArea className="h-96">
                  <div className="space-y-4">
                    {mods.map((mod) => (
                      <Card key={mod.id} className="pixel-border bg-card/50">
                        <CardContent className="pt-6">
                          <div className="flex flex-col md:flex-row md:items-center justify-between gap-4">
                            <div className="flex-1 space-y-2">
                              <div className="flex items-center gap-2 flex-wrap">
                                <Icon name="Package" size={20} className="text-primary" />
                                <h3 className="font-semibold">{mod.name}</h3>
                                <Badge variant="outline" className="pixel-border">
                                  {mod.loader}
                                </Badge>
                                <Badge variant="secondary" className="pixel-border">
                                  v{mod.version}
                                </Badge>
                              </div>
                              <p className="text-sm text-muted-foreground line-clamp-2">
                                {mod.description}
                              </p>
                              <p className="text-xs text-muted-foreground">
                                –°–æ–∑–¥–∞–Ω: {mod.date}
                              </p>
                            </div>
                            <div className="flex gap-2">
                              <Button 
                                onClick={() => {
                                  setCurrentModId(mod.id);
                                  setActiveTab('chat');
                                }}
                                variant="outline"
                                className="pixel-button pixel-border"
                              >
                                <Icon name="Edit" size={16} className="mr-2" />
                                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                              </Button>
                              <Button 
                                onClick={() => handleDownloadMod(mod.id)}
                                className="pixel-button pixel-border bg-primary hover:bg-primary/90"
                              >
                                <Icon name="Download" size={16} className="mr-2" />
                                –°–∫–∞—á–∞—Ç—å
                              </Button>
                            </div>
                          </div>
                        </CardContent>
                      </Card>
                    ))}
                  </div>
                </ScrollArea>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default Index;
